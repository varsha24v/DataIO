# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YaZxNXehbehStUYDh8_PSVnmDuSH5BD8
"""

import pandas as pd

# prompt: importing a dataset folder of data from my googledrive

from google.colab import drive
drive.mount('/content/drive')

# Get the path to the folder containing the dataset
data_path_march = '/content/drive/MyDrive/dataio/December.csv'

# Load the dataset using pandas
df = pd.read_csv(data_path_march)

# prompt: find mode of start_station_name column

start_station_name = 'start_station_name'  # Replace this with the desired column name

# Get the specified column as a pandas Series
column_data = df[start_station_name]

# Find the mode of the column
mode_of_start_station_name = column_data.mode()[0]

# Print the mode
print(f"Mode of start_station_name: {mode_of_start_station_name}")

# prompt: find mode of end_station_name column

end_station_name = 'end_station_name'  # Replace this with the desired column name

# Get the specified column as a pandas Series
column_data = df[end_station_name]

# Find the mode of the column
mode_of_end_station_name = column_data.mode()[0]

# Print the mode
print(f"Mode of end_station_name: {mode_of_end_station_name}")

# prompt: find the most common pair of start_station_name and started_at

#import pandas as pd

# Create a new dataframe with only the two columns
df_combined = df[['start_station_name', 'started_at']]

# Group the dataframe by both columns and count the number of occurrences
grouped_df = df_combined.groupby(['start_station_name', 'started_at']).size().reset_index(name='count')

# Sort the dataframe by the count in descending order
grouped_df = grouped_df.sort_values('count', ascending=False)

# Get the first row, which corresponds to the most common pair
most_common_pair = grouped_df.iloc[0]

# Print the most common pair
print(f"Most common pair: {most_common_pair['start_station_name']} and {most_common_pair['started_at']}")

# prompt: find count of mode for end_station_name column

count_of_mode_end_station_name = df[end_station_name].value_counts().get(mode_of_end_station_name)

print(f"Count of mode end_station_name: {count_of_mode_end_station_name}")

# prompt: find number of cells in end_station_name column

num_cells_end_station_name = df['end_station_name'].count()
print(f"Number of cells in end_station_name column: {num_cells_end_station_name}")

# prompt: find mode for started_at column

started_at = 'started_at'  # Replace this with the desired column name

# Get the specified column as a pandas Series
column_data = df[started_at]

# Find the mode of the column
mode_of_started_at = column_data.mode()[0]

# Print the mode
print(f"Mode of started_at: {mode_of_started_at}")

# prompt: find mode for ended_at column

ended_at = 'ended_at'  # Replace this with the desired column name

# Get the specified column as a pandas Series
column_data = df[ended_at]

# Find the mode of the column
mode_of_ended_at = column_data.mode()[0]

# Print the mode
print(f"Mode of ended_at: {mode_of_ended_at}")

# prompt: find mode for ended_at column

ended_at = 'ended_at'  # Replace this with the desired column name

# Get the specified column as a pandas Series
column_data = df[ended_at]

# Find the mode of the column
mode_of_ended_at = column_data.mode()[0]

# Print the mode
print(f"Mode of ended_at: {mode_of_ended_at}")

# prompt: find the most common pair of start_station_name and end_station_name columns



start_station_name = 'start_station_name'  # Replace this with the desired column name
end_station_name = 'end_station_name'  # Replace this with the desired column name

# Create a new DataFrame with the two columns
df_pair = df[[start_station_name, end_station_name]]

# Group the DataFrame by the two columns and count the occurrences
grouped_df = df_pair.groupby([start_station_name, end_station_name]).size().reset_index(name='count')

# Sort the DataFrame by the count in descending order
sorted_df = grouped_df.sort_values('count', ascending=False)

# Get the most common pair
most_common_pair = sorted_df.iloc[0]

# Print the most common pair
print(f"Most common pair: {most_common_pair[start_station_name]} -> {most_common_pair[end_station_name]} (Count: {most_common_pair['count']})")

# prompt: find the 3 most common pairs of start_station_name and  end_station_name

# Get the top 3 most common pairs
top_3_pairs = sorted_df.head(3)

# Print the top 3 pairs
for i, row in top_3_pairs.iterrows():
  print(f"{i+1}. {row[start_station_name]} -> {row[end_station_name]} (Count: {row['count']})")

# prompt: find number of cell values in column start_station_name

df['start_station_name'].count()

# prompt: find the most common pair of started_at and ended_at

start_at = 'started_at'  # Replace this with the desired column name
end_at = 'ended_at'  # Replace this with the desired column name

# Create a new DataFrame with the two columns
df_pair = df[[start_at, end_at]]

# Group the DataFrame by the two columns and count the occurrences
grouped_df = df_pair.groupby([start_at, end_at]).size().reset_index(name='count')

# Sort the DataFrame by the count in descending order
sorted_df = grouped_df.sort_values('count', ascending=False)

# Get the most common pair
most_common_pair = sorted_df.iloc[0]

# Print the most common pair
print(f"Most common pair: {most_common_pair[start_at]} -> {most_common_pair[end_at]} (Count: {most_common_pair['count']})")